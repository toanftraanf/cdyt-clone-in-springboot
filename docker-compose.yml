version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: cdyt-postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-cdyt_db}
      POSTGRES_USER: ${SPRING_DATASOURCE_USERNAME:-cdyt_user}
      POSTGRES_PASSWORD: ${SPRING_DATASOURCE_PASSWORD:-cdyt_password}
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql:ro
    networks:
      - cdyt-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${SPRING_DATASOURCE_USERNAME:-cdyt_user} -d ${POSTGRES_DB:-cdyt_db}"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: cdyt-redis
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    ports:
      - "${SPRING_REDIS_PORT:-6379}:6379"
    volumes:
      - redis_data:/data
    networks:
      - cdyt-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  # Spring Boot Application with JDK 17
  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: ${BUILD_TARGET:-}
    container_name: cdyt-app
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      # Spring Configuration
      SPRING_PROFILES_ACTIVE: ${SPRING_PROFILES_ACTIVE:-dev}
      
      # Database Configuration
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/${POSTGRES_DB:-cdyt_db}
      SPRING_DATASOURCE_USERNAME: ${SPRING_DATASOURCE_USERNAME:-cdyt_user}
      SPRING_DATASOURCE_PASSWORD: ${SPRING_DATASOURCE_PASSWORD:-cdyt_password}
      
      # Redis Configuration
      SPRING_REDIS_HOST: redis
      SPRING_REDIS_PORT: 6379
      
      # JWT Configuration (optimized)
      JWT_SECRET: ${JWT_SECRET:-your-super-secret-jwt-key-change-this-in-production}
      JWT_DATABASE_EXPIRATION_DAYS: ${JWT_DATABASE_EXPIRATION_DAYS:-1}
      JWT_DATABASE_EXPIRATION_REMEMBER_DAYS: ${JWT_DATABASE_EXPIRATION_REMEMBER_DAYS:-7}
      JWT_EXPIRATION: ${JWT_EXPIRATION:-2592000}  # 30 days for JWT internal expiration
      
      # JDK 17 JVM Options (enhanced for development)
      JAVA_OPTS: >-
        -XX:+UseContainerSupport
        -XX:MaxRAMPercentage=75.0
        -XX:+UseG1GC
        -XX:G1HeapRegionSize=16m
        -XX:+UseStringDeduplication
        -XX:+OptimizeStringConcat
        -Dspring.devtools.restart.enabled=${SPRING_DEVTOOLS_RESTART_ENABLED:-true}
        -Dspring.devtools.livereload.enabled=${SPRING_DEVTOOLS_LIVERELOAD_ENABLED:-true}
      
      # Development debugging (only for dev profile)
      JAVA_DEBUG_OPTS: ${JAVA_DEBUG_OPTS:-}
      
    ports:
      - "${APP_PORT:-8080}:8080"
      # Debug port (only expose in development)
      - "${DEBUG_PORT:-5005}:5005"
    volumes:
      # Development hot reload (comment out for production)
      - ./src:/app/src:ro
      - ./target:/app/target
    networks:
      - cdyt-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Development Profile Services
  # Adminer for database management
  adminer:
    image: adminer:4.8.1
    container_name: cdyt-adminer
    ports:
      - "${ADMINER_PORT:-8081}:8080"
    networks:
      - cdyt-network
    profiles:
      - dev
    restart: unless-stopped

  # Redis Commander for Redis management
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: cdyt-redis-commander
    environment:
      REDIS_HOSTS: local:redis:6379
    ports:
      - "${REDIS_COMMANDER_PORT:-8082}:8081"
    networks:
      - cdyt-network
    profiles:
      - dev
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  cdyt-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
